
services:
  postgres:
    image: postgres:16
    container_name: keycloak_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - keycloak_network

  keycloak:
    image: ${KC_DOCKER_TAG}:latest
    container_name: keycloak
    environment:
      BOOTSTRAP: ${BOOTSTRAP}
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_PASS: ${DB_PASS}
      DB_PASSWORD: ${DB_PASS}
      DB_USER: ${DB_USER}
      DB_VENDOR: postgres
      GCP_CREDENTIALS: ${GCP_CRED}
      GCP_PROJECT_ID: ${GCP_PROJECT}
      JDBC_CONNECTION: ${JDBC_CONNECTION}
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      LOG_LEVEL: "INFO,freemarker:DEBUG"
      LOG_OUTPUT_FORMAT: "--log-console-output=default"
      
    command:
      - start --optimized

    volumes:
      - ${PWD}/cert:/secrets/authdb-certs:ro

    ports:
      - "3033:8080"
    depends_on:
      - postgres
    networks:
      - keycloak_network

volumes:
  postgres_data:

networks:
  keycloak_network:
