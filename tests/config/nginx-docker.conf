user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Header size increase - to accomodate the keycloak oauth2 payload
    # 
    # Increase the size of buffers for large headers
    large_client_header_buffers 8 32k;
    
    # Increase the size of the buffer used for reading the first part of the response
    proxy_buffer_size 32k;
    
    # Increase the size of the buffer for headers from the upstream server
    proxy_buffers 8 32k;
    
    # Increase the maximum size of the header that can be accepted by the client
    client_header_buffer_size 32k;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;

    ##
    # Gzip Settings
    ##

    gzip on;

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/*;
    map $http_upgrade $connection_upgrade {
	default upgrade;
        '' close;
    }

    upstream keycloak {
        server 127.0.0.1:21501 fail_timeout=2s; #
        #server keycloak:21501 fail_timeout=2s; #
    }

    upstream authserver {
        # server oauth2-authenticator:21503 fail_timeout=2s; # oauth2 authenticator - aka cookie maker
        server 127.0.0.1:21503 fail_timeout=2s; # oauth2 authenticator - aka cookie maker
    }

    # I don't need to proxy the legacy auth. Keycloak talks to it.
    #
    # upstream legacyauth {
    #     server legacy-auth-provider:21505 fail_timeout=2s; # legacy auth provider
    # }

    # testsite is replaced by arxivportal
    # upstream testsite {
    #     server 127.0.0.1:21509 fail_timeout=2s; # admin console UI
    # }
    
    upstream backend {
        server 127.0.0.1:21510 fail_timeout=2s; # admin-api backend
    }

    upstream ui {
        server 127.0.0.1:21511 fail_timeout=2s; # admin console UI
    }

    upstream arxivportal {
        server 127.0.0.1:21513 fail_timeout=2s; # arXiv portal
    }

    upstream userportal {
        server 127.0.0.1:21514 fail_timeout=2s; # User portal
    }

    upstream up_api {
        server 127.0.0.1:21515 fail_timeout=2s; # User portal
    }


    server {
        listen 5100;
        server_name     localhost;
        resolver        8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        # add_header X-Content-Type-Options nosniff;
        root /nginx/html;
        index  index.html index.htm;

        error_page   404  /404.html;
        location = /404.html {
            root   /nginx/html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /nginx/html;
        }

        access_log      /log.d/access.log ;
        error_log       /log.d/error.log  ;

        # authn, and account
        location ^~ /aaa {
            # Remove /aaa from the URL if needed
            rewrite ^/aaa(.*)$ $1 break;

            # Don't send any file out
            sendfile off;
            #
            proxy_pass     http://authserver;
            # Required for new HTTP-based CLI
            proxy_http_version 1.1;
            # Don't want any buffering
            proxy_request_buffering off;
            proxy_buffering off;

            proxy_set_header        Host $host:$server_port;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            # Ensure headers are not stripped
            proxy_pass_header Set-Cookie;
        }

        # route to my backend
        location ^~ /admin-api {
            # Remove /api from the URL if needed
            # rewrite ^/admin-api(.*)$ $1 break;

            # Proxy to the backend server
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host:$server_port;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_header Set-Cookie;
            proxy_read_timeout 600s;
            proxy_request_buffering off;
            proxy_pass_request_headers on;
            proxy_buffering off;

            # Ensure no static files are served from /api route
            sendfile off;  
        }

        # This is dev web socket io
        location /websocketio {
            proxy_pass http://ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            # Ensure headers are not stripped
            proxy_pass_header Set-Cookie;
            proxy_read_timeout 600s;
            proxy_request_buffering off;
            proxy_buffering off;
        }
        
        location ^~ /admin-console-dev {
            # rewrite ^/admin-console(.*)$ $1 break;
            # React uses statics
            # sendfile on;
            #
            proxy_pass     http://ui;
            # proxy_redirect http://localhost:5100 http://localhost:4042;
            # Required for new HTTP-based CLId
            proxy_http_version 1.1;
            # Don't want any buffering
            proxy_request_buffering off;
            proxy_buffering off;
            # this is the maximum upload size
            client_max_body_size       10m;
            client_body_buffer_size    128k;
            # downstream nginx doesn't like the port/uri in the host header
            # proxy_set_header        Host $host:$server_port$uri;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            # Ensure headers are not stripped
            proxy_pass_header Set-Cookie;
        }

        location ^~ /admin-console {
            alias /arxiv-admin-console;
            index index.html;
            try_files /index.html $uri;
        
            include /etc/nginx/mime.types;

            # Cache static assets for better performance
            location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|map)$ {
                expires 6M;
                access_log off;
                add_header Cache-Control "public";
            }
        }


        location ^~ /up-api {
            #sendfile on;
            proxy_pass http://up_api;
	    proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;
            client_max_body_size 10m;
            client_body_buffer_size 128k;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_pass_header Set-Cookie;

            # Rewrite incoming requests to strip `/user/`
            #rewrite ^/user/(.*)$ /$1 break;

            # Fix the `Location` headers in responses from the backend
            #sub_filter_types text/html text/css text/javascript application/javascript;
            #sub_filter 'href="/' 'href="/user/';
            #sub_filter 'src="/' 'src="/user/';
            #sub_filter_once off;
        }


	# change /dev-user to /user if you want to use the vite dev server
        location ^~ /user {
            sendfile on;
            proxy_pass http://userportal;
	    proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;
            client_max_body_size 10m;
            client_body_buffer_size 128k;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_header Set-Cookie;

            # Rewrite incoming requests to strip `/user/`
            #rewrite ^/user/(.*)$ /$1 break;

            # Fix the `Location` headers in responses from the backend
            #sub_filter_types text/html text/css text/javascript application/javascript;
            #sub_filter 'href="/' 'href="/user/';
            #sub_filter 'src="/' 'src="/user/';
            #sub_filter_once off;
        }

        location ^~ /user-static {
            alias /account-app;
            index index.html;
            try_files /index.html $uri $uri/;
        
            include /etc/nginx/mime.types;

            # Cache static assets for better performance
            location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|map)$ {
                expires 6M;
                access_log off;
                add_header Cache-Control "public";
            }
        }

        location ^~ / {
            sendfile on;
            proxy_pass     http://arxivportal;
            proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;
            client_max_body_size       10m;
            client_body_buffer_size    128k;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_pass_header Set-Cookie;
        }

    }
}
