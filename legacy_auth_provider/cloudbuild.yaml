steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: build-image
    args: ['build',
           '-t',           'gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:${COMMIT_SHA}',
           '-t',           'gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:latest',
           '.']

  - name: 'gcr.io/cloud-builders/docker'
    id: push-image
    args: ['push',
           'gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:${COMMIT_SHA}',
           'gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:latest']

  - name: 'gcr.io/cloud-builders/gcloud'
    id: deploy
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "${PROJECT_ID}" = "arxiv-development" ] ; then \
          DATABASE=${PROJECT_ID}:us-east4:arxiv-db-dev ; \
        elif [ "${PROJECT_ID}" = "arxiv-production" ] ; then \
          DATABASE=${PROJECT_ID}:us-east4:arxiv-production-rep9 ; \
        else \
          echo "Unknown project ID: ${PROJECT_ID}" ; \
          exit 1 ; \
        fi
        gcloud run deploy ${_IMAGE_NAME} \
          --region us-central1 \
          --project ${PROJECT_ID} \
          --image gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:${COMMIT_SHA} \
          --port=8080 \
          --platform managed \
          --allow-unauthenticated \
          --max-instances=1 \
          --min-instances=1 \
          --execution-environment=gen2 \
          --cpu=1 \
          --memory=1Gi \
          --timeout=300 \
          --concurrency=2 \
          --set-env-vars SQLALCHEMY_RECORD_QUERIES=true \
          --set-secrets=CLASSIC_DB_URI=browse-sqlalchemy-db-uri:latest,API_SECRET_KEY=jwt_secret:latest \
          --session-affinity \
          --set-cloudsql-instances ${DATABASE}

# Store images in Google Artifact Registry
images:
  - gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:${COMMIT_SHA}
  - gcr.io/${PROJECT_ID}/${_ARTIFACT_REPO}/${_IMAGE_NAME}:latest

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _ARTIFACT_REPO: "arxiv-keycloak"
  _IMAGE_NAME: "legacy-auth-provider"
