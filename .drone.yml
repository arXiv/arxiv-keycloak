kind: pipeline
type: kubernetes
name: build-docker-images

node:
  environment: gcp

environment:
  ARTIFACT_REPO: arxiv-keycloak

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: docker-socket
    path: /var/run
  - name: docker-cache
    path: /var/lib/docker


steps:
  - name: hello
    image: alpine
    commands:
      - set
      - echo FOO=bar >> envvars
      - ls
    volumes:
      - name: docker-socket
        path: /var/run
    when:
      changeset:
        includes:
          - cicd/docker

  # This build only succeeds after you bootstrap the arxiv-builder container
  # You can do so by `make builder` in cicd/docker
  - name: build
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:1575e2fe2c54556229df469ed4cc237bc9ce130f
    privileged: true
    environment:
      GIT_SHA: ${DRONE_COMMIT_SHA}
      PLUGIN_JSON_KEY:
        from_secret: drone_runner_sa_key
    volumes:
      - name: docker-socket
        path: /var/run
    commands:
      - python3 /arxiv/setup_sa.py
      - |
        if git diff --quiet $DRONE_COMMIT_BEFORE $GIT_SHA -- keycloak_bend/; then
            echo "No changes in keycloak_bend/, skipping build."
        else
            . ./envvars && python3 /arxiv/docker_builder.py arxiv-keycloak keycloak_bend/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f keycloak_bend/Dockerfile
        fi
      - |
        if git diff --quiet $DRONE_COMMIT_BEFORE $GIT_SHA -- account-ui/; then
            echo "No changes in accunt_ui/, skipping build."
        else
            . ./envvars && python3 /arxiv/docker_builder.py account-ui account-ui/account-app/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f account-ui/account-app/Dockerfile
        fi
      - |
        if git diff --quiet $DRONE_COMMIT_BEFORE $GIT_SHA -- keycloak_tapir_bridge/; then
            echo "No changes in keycloak_tapir_bridge/, skipping build."
        else
            . ./envvars && python3 /arxiv/docker_builder.py keycloak-tapir-bridge keycloak_tapir_bridge/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f keycloak_tapir_bridge/Dockerfile
        fi
      - |
        if git diff --quiet $DRONE_COMMIT_BEFORE $GIT_SHA -- oauth2-authenticator/; then
            echo "No changes in oauth2-authenticator/, skipping build."
        else
            . ./envvars && python3 /arxiv/docker_builder.py oauth2-authenticator oauth2-authenticator/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f oauth2-authenticator/Dockerfile
        fi
      - |
        if git diff --quiet $DRONE_COMMIT_BEFORE $GIT_SHA -- test-mta/; then
            echo "No changes in test-mta/, skipping build."
        else
            . ./envvars && python3 /arxiv/docker_builder.py test-mta test-mta/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f test-mta/Dockerfile
            . ./envvars && python3 /arxiv/docker_builder.py email-to-pubsub test-mta/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f test-mta/email-to-pubsub.Dockerfile
        fi
      - |
        if git diff --quiet $DRONE_COMMIT_BEFORE $GIT_SHA -- user-portal/; then
            echo "No changes in user-portal/, skipping build."
        else
            . ./envvars && python3 /arxiv/docker_builder.py user-portal user-portal/ --repo $DRONE_REPO_NAME --gitsha $GIT_SHA -f user-portal/Dockerfile
        fi
    depends_on:
      - hello

  - name: failure
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:e7a4be9
    privileged: true
    environment:
      SLACK_WEBHOOK_URL:
        from_secret: slack_webhook
    commands:
      # - python3 /arxiv/slacker.py
      - echo bummer
    depends_on:
      - build
    when:
      status:
        - failure

  - name: success
    image: gcr.io/arxiv-stage/arxiv-devops/arxiv-builder:e7a4be9
    privileged: true
    settings:
      slack_webhook_url:
        from_secret: slack_webhook
    commands:
      - echo SUCCESS

    depends_on:
      - build
    when:
      status:
        - success

volumes:
  - name: docker-cache
    persistentVolumeClaim:
      claimName: docker-cache-pvc
  - name: docker-socket
    host:
      path: /var/run

trigger:
  event:
    - push
---
# Pipeline for CentOS 9
kind: pipeline
type: exec
name: centos-9-deploy

node:
  environment: centos9
depends_on:
  - build-docker-images

platform:
  os: linux
  arch: amd64

steps:
  - name: refresh dockers
    commands:
      - whoami
      - export HOME=/home/drone
      - export GOOGLE_APPLICATION_CREDENTIALS=/opt_arxiv/bomb-range/cred/drone-runner-sa.json
      - gcloud auth activate-service-account --key-file=/opt_arxiv/bomb-range/cred/drone-runner-sa.json
      - gcloud auth configure-docker gcr.io
      - cd /opt_arxiv/bomb-range
      - make down
      - make up
