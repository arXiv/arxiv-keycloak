
services:
  auth-db:
    image: postgres:16
    container_name: aaat-auth-db
    environment:
      POSTGRES_USER: ${KC_DB_USER}
      POSTGRES_PASSWORD: ${KC_DB_PASS}
      POSTGRES_DB: keycloak
      # POSTGRES_PORT is NOT used, I think
      POSTGRES_PORT: ${KC_DB_PORT}
      
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    network_mode: host
    command: postgres -p ${KC_DB_PORT}


  pubsub-emulator:
    image: google/cloud-sdk:latest
    container_name: aaat-pubsub-emulator
    command: "/pubsub-setup.sh ${PUBSUB_EMULATOR_PORT} ${PUBSUB_PROJECT} ${GCP_EVENT_TOPIC_ID} ${KC_TAPIR_BRIDGE_SUBSCRIPTION}"
    ports:
      - "${PUBSUB_EMULATOR_PORT}:${PUBSUB_EMULATOR_PORT}"
    environment:
      PUBSUB_EMULATOR_HOST: "0.0.0.0:${PUBSUB_EMULATOR_PORT}"
    network_mode: host
    volumes:
      - ../../tests/config/pubsub-setup.sh:/pubsub-setup.sh:ro

  keycloak:
    image: ${KC_DOCKER_TAG}:latest
    container_name: aaat-keycloak
    environment:
      KC_PORT: ${KC_PORT}
      KC_SSL_PORT: ${KC_SSL_PORT}
      DB_ADDR: 127.0.0.1:${KC_DB_PORT}
      DB_DATABASE: keycloak
      DB_VENDOR: postgres
      KC_DB_PASS: ${KC_DB_PASS}
      KC_DB_USER: ${KC_DB_USER}
      GCP_CREDENTIALS: ${GCP_CRED}
      GCP_PROJECT_ID: ${PUBSUB_PROJECT}
      KC_JDBC_CONNECTION: ${KC_JDBC_CONNECTION}
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      LOG_LEVEL: "INFO,freemarker:DEBUG"
      LOG_OUTPUT_FORMAT: "--log-console-output=default"
      PUBSUB_EMULATOR_HOST: 127.0.0.1:${PUBSUB_EMULATOR_PORT}
      KC_HTTP_PORT: ${KC_PORT}
      # ssl cert
      KC_HTTPS_KEY_STORE_FILE: /etc/keycloak/keycloak.jks
      KC_HTTPS_KEY_STORE_PASSWORD: kcpassword
      KC_HOSTNAME: localhost.arxiv.org
      #
      # These are used for troubleshooting of audit event not going into pubsub.
      # (not sure this works with te pubsub emulator)
      GRPC_LOG_LEVEL: DEBUG
      GRPC_TRACE: tcp,http,api
      #
      ARXIV_USER_REGISTRATION_URL: ${ARXIV_USER_REGISTRATION_URL}
    volumes:
      - ../../keycloak_bend/keycloak-cert/keycloak-self-signed.jks:/etc/keycloak/keycloak.jks:ro
      - ../../keycloak_bend/keycloak-cert/keycloak-self-signed.p12:/etc/keycloak/keycloak.p12:ro

    ports:
      - "${KC_PORT}:${KC_PORT}"
      - "${KC_SSL_PORT}:${KC_SSL_PORT}"
      - 9000:9000
    depends_on:
      - auth-db
      - pubsub-emulator
      - legacy-auth-provider
    network_mode: host

  arxiv-test-db:
    image: mysql:5.7.20
    container_name: aaat-arxiv-test-db
    ports:
      - "${ARXIV_DB_PORT}:${ARXIV_DB_PORT}"  # Host port:Container port
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: arXiv
      MYSQL_USER: arxiv
      MYSQL_PASSWORD: arxiv_password
      MYSQL_TCP_PORT: ${ARXIV_DB_PORT}
    # volumes:
    #  - mysql_data:/var/lib/mysql  # Persist data locally (optional)
    network_mode: host

  legacy-auth-provider:
    image: ${LEGACY_AUTH_DOCKER_TAG}
    container_name: aaat-legacy-auth-provider
    ports:
      - "${LEGACY_AUTH_PORT}:${LEGACY_AUTH_PORT}"  # Host port:Container port
    network_mode: host
    environment:
      API_SECRET_KEY: "${LEGACY_AUTH_API_TOKEN}"
      PORT: ${LEGACY_AUTH_PORT}
      # CLASSIC_DB_URI: "mysql://arxiv:arxiv_password@arxiv-test-db:3306/arXiv"
      CLASSIC_DB_URI: ${CLASSIC_DB_URI}
      # legacy-auth-provider
      URI: "http://localhost:${LEGACY_AUTH_PORT}/auth"
    depends_on:
      - arxiv-test-db

  keycloak-tapir-bridge:
    image: "${KC_TAPIR_BRIDGE_DOCKER_TAG}"
    container_name: aaat-keycloak-tapir-bridge
    environment:
      PUBSUB_EMULATOR_HOST: 127.0.0.1:${PUBSUB_EMULATOR_PORT}
      # IRL, you set this so the app can read the events from pubsub
      # GOOGLE_APPLICATION_CREDENTIALS: sync-test.json
      SUBSCRIPTION: ${KC_TAPIR_BRIDGE_SUBSCRIPTION}
      # CLASSIC_DB_URI: "mysql://arxiv:arxiv_password@arxiv-test-db:3306/arXiv"
      CLASSIC_DB_URI: ${CLASSIC_DB_URI}
      AAA_API_URL: ${KC_TAPIR_BRIDGE_AUDIT_API_URL}
      AAA_API_TOKEN: ${AAA_API_TOKEN}
    network_mode: host
    depends_on:
      - arxiv-test-db
      - pubsub-emulator
    command: python main.py --project "${PUBSUB_PROJECT}" --subscription "${KC_TAPIR_BRIDGE_SUBSCRIPTION}" --debug 


  nginx-proxy:
    image: nginx:latest
    container_name: aaat-nginx-proxy
    volumes:
      - ./config/aaat-nginx.conf:/etc/nginx/nginx.conf:ro  # Mount custom NGINX config
      - ./nginx/:/nginx/:ro
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    network_mode: host
    
  test-mta:
    image: "${TEST_MTA_TAG}"
    container_name: aaat-test-mta
    ports:
      - "${SMTP_PORT}:${SMTP_PORT}"
      - "${MAIL_API_PORT}:${MAIL_API_PORT}"
    network_mode: host
    environment:
      SMTP_PORT: "${SMTP_PORT}"
      MAIL_API_PORT: "${MAIL_API_PORT}"
      
    
  keycloak-setup:
    image: python:3.12
    container_name: aaat-keycloak-setup
    depends_on:
      - keycloak
    network_mode: host
    volumes:
      - ../../keycloak_bend:/keycloak_bend:ro
    environment:
      # This is running in the docker network - so use private address
      KC_URL: "${KC_URL_PRIVATE}"
      KC_ADMIN_PASSWORD: "${KC_ADMIN_PASSWORD}"
      ARXIV_USER_SECRET: "${KEYCLOAK_TEST_CLIENT_SECRET}"
      LEGACY_AUTH_API_TOKEN: "${LEGACY_AUTH_API_TOKEN}"
      SOURCE: /keycloak_bend/realms/arxiv-realm-aaat.json

    entrypoint: sh /keycloak_bend/tools/setup-arxiv-realm.sh

  arxiv-test-db-setup:
    image: mysql:5.7.20
    container_name: aaat-arxiv-test-db-setup
    depends_on:
      - arxiv-test-db
    network_mode: host
    environment:
      MYSQL_HOST: 127.0.0.1
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: arXiv
      MYSQL_USER: arxiv
      MYSQL_PASSWORD: arxiv_password
      MYSQL_TCP_PORT: ${ARXIV_DB_PORT}
    volumes:
      - ../../:/arxiv-keycloak/:ro
    entrypoint: bash /arxiv-keycloak/tools/restore-arxiv-db.sh /arxiv-keycloak/tests/data/test-arxiv-db-data.sql.gz

    
